<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chapter5.日付や時間の取り扱い</title>
</head>
<body>


  <script>

    /*********************************************
      82.西暦を取得したい
    **********************************************/
    // 利用シーン: 西暦を取得したいとき
    //           年号に関するデータを扱うとき
    // 【構文①】
    // メソッド： getFullYear()
    // 意味： 西暦を取得する
    // 戻り値： 数値

    /***
    const date = new Date();
    const year = date.getFullYear();
    console.log(year);
    ***/


    /*********************************************
      83.日付を取得したい
    **********************************************/
    // 利用シーン: 日付を画面に表示するとき
    //           日付を元に処理を分岐したいとき
    // 【構文①】
    // メソッド： getMonth()
    // 意味： 月を取得する
    // 戻り値： 数値
    // 【構文②】
    // メソッド： getDate()
    // 意味： 日を取得する
    // 戻り値： 数値

    /***
    const date = new Date();
    const month = date.getMonth() + 1;
    const day = date.getDate();
    const label = `${month}月${day}日`;
    console.log(label);
    ***/


    /*********************************************
      84.時刻を取得したい
    **********************************************/
    // 利用シーン: 現在時刻を使いたいとき
    //           デジタル時計として表示するとき
    // 【構文①】
    // メソッド： getHours()
    // 意味： 時間を取得する
    // 戻り値： 数値
    // 【構文②】
    // メソッド： getMinutes()
    // 意味： 分数を取得する
    // 戻り値： 数値
    // 【構文③】
    // メソッド： getSeconds()
    // 意味： 秒数を取得する
    // 戻り値： 数値
    // 【構文④】
    // メソッド： getMilliseconds()
    // 意味： ミリ秒数を取得する
    // 戻り値： 数値

    /***
    const date = new Date();
    const hour = date.getHours();
    const minutes = date.getMinutes();
    const seconds = date.getSeconds();
    const label = `${hour}時${minutes}分${seconds}秒`;
    console.log(label);

    // 午前と午後を分けたいとき
    const date = new Date();
    const hour = date.getHours();
    let meridiem;
    let hour2;
    if(hour<12) {
      meridiem = '午前';
      hour2 = hour;
    } else {
      meridiem = '午後';
      hour2 = hour - 12;
    }
    const label = `${meridiem}${hour2}時`;
    console.log(label);
    ***/


    /*********************************************
      85.曜日を取得したい
    **********************************************/
    // 利用シーン: 曜日を表示したいとき
    //           日付情報から曜日を調べたいとき
    // 【構文①】
    // メソッド： getDay()
    // 意味：曜日を取得する
    // 戻り値： 数値

    /***
    const date = new Date();
    const day = date.getDay();
    const dayList = ['日','月','火','水','木','金','土'];
    const label = dayList[day];
    console.log(label);
    ***/


    /*********************************************
      86.日本式の表記の時刻を取得したい
    **********************************************/
    // 利用シーン: 簡易的に日付時刻情報を出力したいとき
    //           多言語の日付時刻表示を作りたいとき
    // 【構文①】
    // メソッド： toLocaleDateString()
    // 意味： 日付の文字列を取得する
    // 戻り値： 文字列
    // 【構文②】
    // メソッド： toLocaleTimeString()
    // 意味： 時刻の文字列を取得する
    // 戻り値： 文字列

    /***
    const date = new Date();
    const locale = date.toLocaleString();
    const localeDate = date.toLocaleDateString();
    const localeTime = date.toLocaleTimeString();

    console.log(locale);
    console.log(localeDate);
    console.log(localeTime);
    ***/


    /*********************************************
      87. 日付文字列からタイムスタンプ値を取得したい
    **********************************************/
    // 利用シーン: 日付や時刻の差分を計算するために、タイムスタンプ値を取得したいとき
    // 【構文①】
    // メソッド： Date.parse()
    // 意味： 日付文字列からタイムスタンプ値を取得する
    // 戻り値： 数値




  </script>
</body>
</html>
